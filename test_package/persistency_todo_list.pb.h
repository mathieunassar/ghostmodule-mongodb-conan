// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: persistency_todo_list.proto

#ifndef PROTOBUF_INCLUDED_persistency_5ftodo_5flist_2eproto
#define PROTOBUF_INCLUDED_persistency_5ftodo_5flist_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_persistency_5ftodo_5flist_2eproto 

namespace protobuf_persistency_5ftodo_5flist_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_persistency_5ftodo_5flist_2eproto
namespace ghost {
namespace examples {
namespace protobuf {
class Todo;
class TodoDefaultTypeInternal;
extern TodoDefaultTypeInternal _Todo_default_instance_;
}  // namespace protobuf
}  // namespace examples
}  // namespace ghost
namespace google {
namespace protobuf {
template<> ::ghost::examples::protobuf::Todo* Arena::CreateMaybeMessage<::ghost::examples::protobuf::Todo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ghost {
namespace examples {
namespace protobuf {

// ===================================================================

class Todo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ghost.examples.protobuf.Todo) */ {
 public:
  Todo();
  virtual ~Todo();

  Todo(const Todo& from);

  inline Todo& operator=(const Todo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Todo(Todo&& from) noexcept
    : Todo() {
    *this = ::std::move(from);
  }

  inline Todo& operator=(Todo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Todo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Todo* internal_default_instance() {
    return reinterpret_cast<const Todo*>(
               &_Todo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Todo* other);
  friend void swap(Todo& a, Todo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Todo* New() const final {
    return CreateMaybeMessage<Todo>(NULL);
  }

  Todo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Todo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Todo& from);
  void MergeFrom(const Todo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Todo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .google.protobuf.Timestamp date_created = 3;
  bool has_date_created() const;
  void clear_date_created();
  static const int kDateCreatedFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_date_created() const;
  public:
  const ::google::protobuf::Timestamp& date_created() const;
  ::google::protobuf::Timestamp* release_date_created();
  ::google::protobuf::Timestamp* mutable_date_created();
  void set_allocated_date_created(::google::protobuf::Timestamp* date_created);

  // @@protoc_insertion_point(class_scope:ghost.examples.protobuf.Todo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::Timestamp* date_created_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_persistency_5ftodo_5flist_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Todo

// string title = 1;
inline void Todo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Todo::title() const {
  // @@protoc_insertion_point(field_get:ghost.examples.protobuf.Todo.title)
  return title_.GetNoArena();
}
inline void Todo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ghost.examples.protobuf.Todo.title)
}
#if LANG_CXX11
inline void Todo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ghost.examples.protobuf.Todo.title)
}
#endif
inline void Todo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ghost.examples.protobuf.Todo.title)
}
inline void Todo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ghost.examples.protobuf.Todo.title)
}
inline ::std::string* Todo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:ghost.examples.protobuf.Todo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Todo::release_title() {
  // @@protoc_insertion_point(field_release:ghost.examples.protobuf.Todo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Todo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:ghost.examples.protobuf.Todo.title)
}

// string description = 2;
inline void Todo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Todo::description() const {
  // @@protoc_insertion_point(field_get:ghost.examples.protobuf.Todo.description)
  return description_.GetNoArena();
}
inline void Todo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ghost.examples.protobuf.Todo.description)
}
#if LANG_CXX11
inline void Todo::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ghost.examples.protobuf.Todo.description)
}
#endif
inline void Todo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ghost.examples.protobuf.Todo.description)
}
inline void Todo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ghost.examples.protobuf.Todo.description)
}
inline ::std::string* Todo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:ghost.examples.protobuf.Todo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Todo::release_description() {
  // @@protoc_insertion_point(field_release:ghost.examples.protobuf.Todo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Todo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:ghost.examples.protobuf.Todo.description)
}

// .google.protobuf.Timestamp date_created = 3;
inline bool Todo::has_date_created() const {
  return this != internal_default_instance() && date_created_ != NULL;
}
inline const ::google::protobuf::Timestamp& Todo::_internal_date_created() const {
  return *date_created_;
}
inline const ::google::protobuf::Timestamp& Todo::date_created() const {
  const ::google::protobuf::Timestamp* p = date_created_;
  // @@protoc_insertion_point(field_get:ghost.examples.protobuf.Todo.date_created)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Todo::release_date_created() {
  // @@protoc_insertion_point(field_release:ghost.examples.protobuf.Todo.date_created)
  
  ::google::protobuf::Timestamp* temp = date_created_;
  date_created_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Todo::mutable_date_created() {
  
  if (date_created_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    date_created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ghost.examples.protobuf.Todo.date_created)
  return date_created_;
}
inline void Todo::set_allocated_date_created(::google::protobuf::Timestamp* date_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_created_);
  }
  if (date_created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(date_created)->GetArena();
    if (message_arena != submessage_arena) {
      date_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_created, submessage_arena);
    }
    
  } else {
    
  }
  date_created_ = date_created;
  // @@protoc_insertion_point(field_set_allocated:ghost.examples.protobuf.Todo.date_created)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace examples
}  // namespace ghost

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_persistency_5ftodo_5flist_2eproto
